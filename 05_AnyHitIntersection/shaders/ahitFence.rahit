#version 460
#extension GL_GOOGLE_include_directive : enable
#include "rtcommon.glsl"
#include "rayhitPayload.glsl"
#include "fetchVertex.glsl"

hitAttributeEXT DefaultHitAttribute myHitAttribute;

layout(shaderRecordEXT) buffer sbt {
    uint64_t indexBuffer;
    uint64_t vertexBufferPNT;
};

void main() {
  const vec2 attribs = myHitAttribute.attribs;
  const vec3 barys = vec3(1.0 - attribs.x - attribs.y, attribs.x, attribs.y);
  
  VertexPNT vtx = FetchVertexInterleavedPNT(
    barys, indexBuffer, vertexBufferPNT);

  // 使用するマテリアルを求める.  
  ObjectParameters objParams = objParams[gl_InstanceID];
  Material material = materials[nonuniformEXT(objParams.materialIndex)];

  vec4 diffuse = vec4(1.0);
  if(material.textureIndex > -1 ) {
    diffuse = texture(textures[nonuniformEXT(material.textureIndex)], vtx.Texcoord);
  }

  // 透明度が一定値以下なら無効.
  if(diffuse.a < 0.5) {
    ignoreIntersectionEXT;
  }
}
