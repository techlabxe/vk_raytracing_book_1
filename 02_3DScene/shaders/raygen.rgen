// glslangValidator -S rgen -V --target-env spirv1.4  -e rgsMain --source-entrypoint main .\rtShaders.glsl
// glslangValidator -S rmiss -V --target-env spirv1.4 -e missMain --source-entrypoint main .\rtShaders.glsl
// glslangValidator -S rchit -V --target-env spirv1.4 -e chsMain --source-entrypoint main .\rtShaders.glsl


#version 460
#extension GL_EXT_ray_tracing : enable

layout(location = 0) rayPayloadEXT vec3 hitValue;

layout(binding=0, set=0) uniform accelerationStructureEXT topLevelAS;
layout(binding=1, set=0, rgba8) uniform image2D image;
layout(binding=2, set=0) uniform SceneParameters {
    mat4 mtxView;
    mat4 mtxProj;
    mat4 mtxViewInv;
    mat4 mtxProjInv;
    vec4 lightDirection;
    vec4 lightColor;
    vec4 ambientColor;
} sceneParams;

void main() {
  const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
  const vec2 screenPos = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
  vec2 d = screenPos * 2.0 - 1.0;

  vec4 origin = sceneParams.mtxViewInv * vec4(0, 0, 0, 1);
  vec4 target = sceneParams.mtxProjInv * vec4(d.x, -d.y, 1, 1);
  vec4 direction = sceneParams.mtxViewInv * vec4(target.xyz, 0);
  direction.xyz = normalize(direction.xyz);

  float tmin = 0.00;
  float tmax = 10000.0;
  
  traceRayEXT(
    topLevelAS,
    gl_RayFlagsOpaqueEXT,
    0xff,
    0,
    0,
    0,
    origin.xyz,
    tmin,
    direction.xyz,
    tmax,
    0
  );
  imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 1.0));
}
